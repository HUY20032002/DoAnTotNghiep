const express = require("express");
const router = express.Router();
const productController = require("../app/controllers/ProductController");
const multer = require("multer");
const path = require("path");

// C·∫•u h√¨nh multer
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, "uploads/");
  },
  filename: (req, file, cb) => {
    const uniqueSuffix = Date.now() + "-" + Math.round(Math.random() * 1e9);
    cb(null, uniqueSuffix + path.extname(file.originalname));
  },
});

const upload = multer({ storage });

// üëá S·ª≠a route createProduct ƒë·ªÉ d√πng multer
router.post("/create", upload.single("image"), productController.createProduct);

// L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m
router.get("/", productController.getAllProducts);

//L·∫•y t·∫•t c·∫£ s·∫£n ph·∫©m x√≥a m·ªÅm
router.get("/trash", productController.getAllProductsTrash);

// L·∫•y th√¥ng tin chi ti·∫øt m·ªôt s·∫£n ph·∫©m
router.get("/:id", productController.getProductById);

// C·∫≠p nh·∫≠t th√¥ng tin s·∫£n ph·∫©m
router.put("/:id", upload.single("image"), productController.updateProduct);

// X√≥a s·∫£n ph·∫©m (soft delete)
router.delete("/:id", productController.deleteProduct);

// Kh√¥i ph·ª•c s·∫£n ph·∫©m ƒë√£ x√≥a m·ªÅm
router.patch("/restore/:id", productController.restoreProduct);
// X√≥a Vƒ©nh Vi·ªÖn s·∫£n ph·∫©m
router.delete("/destroy/:id", productController.destroyProduct);

module.exports = router;
